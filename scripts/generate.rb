#!/usr/bin/env ruby
# coding: utf-8
# frozen_string_literal: true

require 'yaml'

if YAML.respond_to?(:unsafe_load_file)
  holidays_detailed = YAML.unsafe_load_file('./holiday_jp/holidays_detailed.yml')
else
  holidays_detailed = YAML.load_file('./holiday_jp/holidays_detailed.yml')
end
holidays = holidays_detailed.values.sort_by {|v| v['date'] }
output_path = File.join('./Sources/HolidayJp/Holidays.generated.swift')

File.open(output_path, 'w') do |io|
  io.write "//\n"
  io.write "//  Holidays.generated.swift\n"
  io.write "//  holiday_jp-swift\n"
  io.write "//\n"
  io.write "//  Generated by scripts/generate.rb\n"
  io.write "//\n"
  io.write "\n"
  io.write "import Foundation\n"
  io.write "\n"
  io.write "fileprivate func newHolidays() -> [String: Holiday] {\n"
  io.write "    var holidays: [String: Holiday] = [:]\n"
  io.write "    \n"

  holidays.each do |holiday|
    io.write %Q|    holidays["#{holiday['date']}"] = Holiday(|
    io.write %Q|ymd: "#{holiday['date']}", |
    io.write %Q|week: "#{holiday['week']}", |
    io.write %Q|weekEn: "#{holiday['week_en']}", |
    io.write %Q|name: "#{holiday['name']}", |
    io.write %Q|nameEn: "#{holiday['name_en']}"|
    io.write %Q|)\n|
  end

  io.write "    \n"
  io.write "    return holidays\n"
  io.write "}\n"
  io.write "\n"
  io.write "let Holidays: [String: Holiday] = newHolidays()\n"
end
